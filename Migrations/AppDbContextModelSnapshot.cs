// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestApiAnimals.DataAccess.Context;

#nullable disable

namespace RestApiAnimals.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestApiAnimals.DataAccess.Entities.AnimalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasDiscriminator<string>("Species").HasValue("AnimalEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RestApiAnimals.DataAccess.Entities.ElephantEntity", b =>
                {
                    b.HasBaseType("RestApiAnimals.DataAccess.Entities.AnimalEntity");

                    b.Property<double>("TrunkLength")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Elephant");
                });

            modelBuilder.Entity("RestApiAnimals.DataAccess.Entities.LionEntity", b =>
                {
                    b.HasBaseType("RestApiAnimals.DataAccess.Entities.AnimalEntity");

                    b.Property<bool>("HaseMane")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Lion");
                });

            modelBuilder.Entity("RestApiAnimals.DataAccess.Entities.PenguinEntity", b =>
                {
                    b.HasBaseType("RestApiAnimals.DataAccess.Entities.AnimalEntity");

                    b.Property<int>("IceSlidingSkill")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Penguin");
                });
#pragma warning restore 612, 618
        }
    }
}
